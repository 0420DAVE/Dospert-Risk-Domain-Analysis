View(Wage)
Wage<-subset(Wage,select=-c(logwage))
View(Wage)
Wage<-subset(Wage,-c(logwage))
Wage<-subset(Wage,select-c(logwage))
Wage<-subset(Wage,select=-c(logwage))
data(Wage);
# Exclude column "logwage"
Wage<-subset(Wage,-c(logwage))
Wage<-subset(Wage,select=-c(logwage))
Wage<-subset(Wage,select=c(logwage))
data(Wage);
Wage<-subset(Wage,select=c(logwage))
Wage<-subset(Wage,select=-c(logwage))
summary(Wage)
library(caret);library(ggplot2);library(ISLR); # ISLK contains wage data
data(Wage);
Wage<-subset(Wage,select=-c(logwage))
summary(Wage)
inTrain<-createDataPartition(y=Wage$wage)
training<-Wage[inTrain,]
inTrain<-createDataPartition(y=Wage$wage)
training<-Wage[inTrain,]
inTrain<-createDataPartition(y=Wage$wage,list=F,p=0.7)
training<-Wage[inTrain,]
testing<-Wage[-inTrain,]
featurePlot(x=training[,c("age","educated","jobclass)],
y=training$wage),
plot="pairs")
featurePlot(x=training[,c("age","educated","jobclass")],
y=training$wage),
plot="pairs")
featurePlot(x=training[,c("age","educated","jobclass")],
y=training$wage,
plot="pairs")
featurePlot(x=training[,c("age","education","jobclass")],
y=training$wage,
plot="pairs")
featurePlot(x=training[,c("age","education","jobclass")],
y=training$wage,
)
featurePlot(x=training[,c("age","education","jobclass")],
y=training$wage,
plot="pairs")
qplot(age,wage,colour=jobclass,data=training)
qplot(age,wage,colour=education,data=training)
fit<-train(wage~age+jobclass+education,method="lm",data=training)
mod<-fit$finalModel
print(mod)
fit
plot(mod,1,pch=19,cex=0.5,col="red")
dev.off()
plot(mod,1,pch=19,cex=0.1,col="grey")
print(mod)
qplot(mod,colour=race,data=training)
qplot(mod$fitted,mod$residual,colour=race,data=training)
plot(finMod$residuals,pch=19)
plot(finMod$residuals,pch=19)
plot(mod$residuals,pch=19)
plot(mod$residuals,pch=19,cex=0.1)
qplot(mod$residuals,pch=19,cex=0.1)
plot(mod$residuals,pch=19,cex=0.1)
pred<-predict(mod,testing)
pred<-predict(fit,testing)
qplot(wage,pred,colour=year,data=testing)
qplot(wage,pred,colour=year,data=testing,ylim=c(350,350),xlim=c(350,350))
qplot(wage,pred,colour=year,data=testing,ylim=c(0,350),xlim=c(0,350))
qplot(wage,pred,colour=year,data=testing,ylim=c(0,300),xlim=c(0,300))
qplot(wage,year,data=testing)
qplot(year,wage,data=testing)
boxplot(year,wage,data=testing)
ggplot(testing,aes(x=year,y=wage))+geom_point()
ggplot(testing,aes(x=year,y=wage))+geom_boxplot()
ggplot(testing,aes(x=year,y=wage))+geom_bar()
ggplot(testing,aes(x=year,y=wage))+geom_point()
ggplot(testing,aes(x=year,y=wage))+geom_contour()
ggplot(testing,aes(x=year,y=wage))+geom_points()
ggplot(testing,aes(x=year,y=wage))+geom_point()
library(caret);library(gglpot2)
library(caret);library(ggplot2)
library(ElemStatLearn)
install.packages("ElemStatLearn")
library(ElemStatLearn); data(Ozone,package="ElemStatLearn")
library(ElemStatLearn); data(ozone,package="ElemStatLearn")
head(ozone)
ozone<-ozone[order(ozone$ozone),]
head(ozone)
ll<-data.frame(NA,nrow=10,ncol=55)
ss<-sample(dim(ozone)[1],replacement=T)
ss<-sample(dim(ozone)[1],replace=T)
ss
dim(ozone)[1]
ozone=1:155
ozone
library(caret);library(ggplot2)
library(ElemStatLearn); data(ozone,package="ElemStatLearn")
```
```{r}
head(ozone)
#reorder based on ozone variable
ozone<-ozone[order(ozone$ozone),]
#create empty matrix
ll<-data.frame(NA,nrow=10,ncol=55)
View(ozone)
ll<-data.frame(NA,nrow=10,ncol=155)
ll[i,]<-predict(loess0,newdata=data.frame[ozone=1:155])
}
#create sampel from data with replacement, create index first
ss<-sample(dim(ozone)[1],replacement=T)
ozone0<ozone[ss,];ozone0<-ozone[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame[ozone=1:155])
}
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(dim(ozone)[1],replacement=T)
ozone0<ozone[ss,];ozone0<-ozone[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame[ozone=1:155])
}
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(dim(ozone)[1],replace=T)
ozone0<ozone[ss,];ozone0<-ozone[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame[ozone=1:155])
}
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(dim(ozone)[1],replace=T)
ozone0<-ozone[ss,];ozone0<-ozone[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame[ozone=1:155])
}
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(dim(ozone)[1],replace=T)
ozone0<-ozone[ss,];ozone0<-ozone[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame(ozone=1:155)
}
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(dim(ozone)[1],replace=T)
ozone0<-ozone[ss,];ozone0<-ozone[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame(ozone=1:155))
}
newdata
ll
for(i in 1:10){
# create sample from data with replacement
ss <- sample(1:dim(ozone)[1],replace=T)
# draw sample from the dataa and reorder rows based on ozone
ozone0 <- ozone[ss,]; ozone0 <- ozone0[order(ozone0$ozone),]
# fit loess function through data (similar to spline)
loess0 <- loess(temperature ~ ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
library(ElemStatLearn); data(ozone,package="ElemStatLearn")
# reorder rows based on ozone variable
ozone <- ozone[order(ozone$ozone),]
# create empty matrix
ll <- matrix(NA,nrow=10,ncol=155)
# iterate 10 times
for(i in 1:10){
# create sample from data with replacement
ss <- sample(1:dim(ozone)[1],replace=T)
# draw sample from the dataa and reorder rows based on ozone
ozone0 <- ozone[ss,]; ozone0 <- ozone0[order(ozone0$ozone),]
# fit loess function through data (similar to spline)
loess0 <- loess(temperature ~ ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
head(ozone)
#reorder based on ozone variable
ozone<-ozone[order(ozone$ozone),]
#create empty matrix
ll<-matrix(NA,nrow=10,ncol=155)
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(dim(ozone)[1],replace=T)
ozone0<-ozone[ss,];ozone0<-ozone[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame(ozone=1:155))
}
plot(ozone$ozone,ozone$temperature, pch=19,cex=0.5)
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=0.2)}
ll
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=2)}
plot(ozone$ozone,ozone$temperature,pch=19,cex=0.5)
# plot each prediction model
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=2)}
# plot the average in red
lines(1:155,apply(ll,2,mean),col="red",lwd=2)
for(i in 1:10){
# create sample from data with replacement
ss <- sample(1:dim(ozone)[1],replace=T)
# draw sample from the dataa and reorder rows based on ozone
ozone0 <- ozone[ss,]; ozone0 <- ozone0[order(ozone0$ozone),]
# fit loess function through data (similar to spline)
loess0 <- loess(temperature ~ ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
plot(ozone$ozone,ozone$temperature,pch=19,cex=0.5)
plot(ozone$ozone,ozone$temperature,pch=19,cex=0.5)
# plot each prediction model
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=2)}
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(1:dim(ozone)[1],replace=T)
ozone0<-ozone[ss,];ozone0<-ozone[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame(ozone=1:155))
}
plot(ozone$ozone,ozone$temperature, pch=19,cex=0.5)
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=2)}
for(i in 1:10){
# create sample from data with replacement
ss <- sample(1:dim(ozone)[1],replace=T)
# draw sample from the dataa and reorder rows based on ozone
ozone0 <- ozone[ss,]; ozone0 <- ozone0[order(ozone0$ozone),];
# fit loess function through data (similar to spline)
loess0 <- loess(temperature ~ ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
plot(ozone$ozone,ozone$temperature, pch=19,cex=0.5)
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=2)}
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(1:dim(ozone)[1],replace=T)
ozone0<-ozone[ss,];ozone0<-ozone[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame(ozone=1:155))
}
plot(ozone$ozone,ozone$temperature, pch=19,cex=0.5)
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=2)}
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(1:dim(ozone)[1],replace=T)
ozone0<-ozone[ss,];ozone0<-ozone0[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame(ozone=1:155))
}
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(1:dim(ozone)[1],replace=T)
ozone0<-ozone[ss,];ozone0<-ozone0[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame(ozone=1:155))
}
for(i in 1:10){
# create sample from data with replacement
ss <- sample(1:dim(ozone)[1],replace=T)
# draw sample from the dataa and reorder rows based on ozone
ozone0 <- ozone[ss,]; ozone0 <- ozone0[order(ozone0$ozone),];
# fit loess function through data (similar to spline)
loess0 <- loess(temperature ~ ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
for(i in 1:10){
# create sample from data with replacement
ss <- sample(1:dim(ozone)[1],replace=T)
# draw sample from the dataa and reorder rows based on ozone
ozone0 <- ozone[ss,]; ozone0 <- ozone0[order(ozone0$ozone),]
# fit loess function through data (similar to spline)
loess0 <- loess(temperature ~ ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(1:dim(ozone)[1],replace=T)
ozone0<-ozone[ss,];ozone0<-ozone0[order(ozone$ozone),]
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame(ozone=1:155))
}
for(i in 1:10){
#create sample index from data with replacememnt
ss<-sample(1:dim(ozone)[1],replace=T)
#draw sample from data and reorder
ozone0<-ozone[ss,];ozone0<-ozone0[order(ozone0$ozone),]
# fit loess function through data
loess0<-loess(temperature~ozone,data=ozone,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
plot(ozone$ozone,ozone$temperature, pch=19,cex=0.5)
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=2)}
for(i in 1:10){
# create sample from data with replacement
ss <- sample(1:dim(ozone)[1],replace=T)
# draw sample from the dataa and reorder rows based on ozone
ozone0 <- ozone[ss,]; ozone0 <- ozone0[order(ozone0$ozone),]
# fit loess function through data (similar to spline)
loess0 <- loess(temperature ~ ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
for(i in 1:10){
# create sample from data with replacement
ss <- sample(1:dim(ozone)[1],replace=T)
# draw sample from the dataa and reorder rows based on ozone
ozone0 <- ozone[ss,]; ozone0 <- ozone0[order(ozone0$ozone),]
# fit loess function through data (similar to spline)
loess0 <- loess(temperature ~ ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
head(ozone)
#reorder based on ozone variable
ozone<-ozone[order(ozone$ozone),]
#create empty matrix
ll<-matrix(NA,nrow=10,ncol=155) # why I can't use matrix here??????!!!!!
for(i in 1:10){
# create sample from data with replacement
ss <- sample(1:dim(ozone)[1],replace=T)
# draw sample from the dataa and reorder rows based on ozone
ozone0 <- ozone[ss,]; ozone0 <- ozone0[order(ozone0$ozone),]
# fit loess function through data (similar to spline)
loess0 <- loess(temperature ~ ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
for(i in 1:10){
#create sample index from data with replacememnt
ss<-sample(1:dim(ozone)[1],replace=T)
#draw sample from data and reorder
ozone0<-ozone[ss,];ozone0<-ozone0[order(ozone0$ozone),]
# fit loess function through data
loess0<-loess(temperature~ozone,data=ozone,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
for(i in 1:10){
# create sample from data with replacement
ss <- sample(1:dim(ozone)[1],replace=T)
# draw sample from the dataa and reorder rows based on ozone
ozone0 <- ozone[ss,]; ozone0 <- ozone0[order(ozone0$ozone),]
# fit loess function through data (similar to spline)
loess0 <- loess(temperature ~ ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
plot(ozone$ozone,ozone$temperature, pch=19,cex=0.5)
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=2)}
for(i in 1:10){
#create sample index from data with replacememnt
ss<-sample(1:dim(ozone)[1],replace=T)
#draw sample from data and reorder
ozone0<-ozone[ss,];ozone0<-ozone0[order(ozone0$ozone),]
# fit loess function through data
loess0<-loess(temperature~ozone,data=ozone,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
plot(ozone$ozone,ozone$temperature, pch=19,cex=0.5)
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=2)}
for(i in 1:10){
#create sample index from data with replacememnt
ss<-sample(1:dim(ozone)[1],replace=T)
#draw sample from data and reorder
ozone0<-ozone[ss,];ozone0<-ozone0[order(ozone0$ozone),]
# fit loess function through data
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
for(i in 1:10){
#create sample index from data with replacememnt
ss<-sample(1:dim(ozone)[1],replace=T)
#draw sample from data and reorder
ozone0<-ozone[ss,];ozone0<-ozone0[order(ozone0$ozone),]
# fit loess function through data
loess0 <- loess(temperature ~ ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
head(ozone)
#reorder based on ozone variable
ozone<-ozone[order(ozone$ozone),]
#create empty matrix
ll<-matrix(NA,nrow=10,ncol=155) # why I can't use matrix here??????!!!!!
for(i in 1:10){
#create sample index from data with replacememnt
ss<-sample(1:dim(ozone)[1],replace=T)
#draw sample from data and reorder
ozone0<-ozone[ss,];ozone0<-ozone0[order(ozone0$ozone),]
# fit loess function through data
loess0 <- loess(temperature ~ ozone,data=ozone0,span=0.2)
# prediction from loess curve for the same values each time
ll[i,] <- predict(loess0,newdata=data.frame(ozone=1:155))
}
plot(ozone$ozone,ozone$temperature, pch=19,cex=0.5)
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=2)}
line(1:155,sapply(ll,2,mean),col="red",lwd=2)
line(1:155,apply(ll,2,mean),col="red",lwd=2)
lines(1:155,apply(ll,2,mean),col="red",lwd=2)
points(1:155,apply(ll,2,mean),col="red",lwd=2)
points(1:155,apply(ll,2,mean),col="red",lwd=1)
points(1:155,apply(ll,2,mean),col="red",lwd=1)
plot(ozone$ozone,ozone$temperature, pch=19,cex=0.5)
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=2)}
points(1:155,apply(ll,2,mean),col="red",lwd=1)
lines(1:155,apply(ll,2,mean),col="red",lwd=1)
plot(ozone$ozone,ozone$temperature, pch=19,cex=0.5)
for(i in 1:10){lines(1:155,ll[i,],col="grey",lwd=2)}
lines(1:155,apply(ll,2,mean),col="red",lwd=1)
predictor<-data.frame(ozone=ozone$ozone)
temperature=ozone$temperature
predictor<-data.frame(ozone=ozone$ozone)
temperature=ozone$temperature
treebag<-bag(predictor,temperature,B=10,
bagControl=bagControl(fit=ctreebag$fit,predict=cteeBag$pred,aggregate=ctreebag&aggregate))
predictor<-data.frame(ozone=ozone$ozone)
temperature=ozone$temperature
treebag<-bag(predictor,temperature,B=10,
bagControl=bagControl(fit=ctreeBag$fit,predict=cteeBag$pred,aggregate=ctreeBag&aggregate))
predictor<-data.frame(ozone=ozone$ozone)
temperature=ozone$temperature
treebag<-bag(predictor,temperature,B=10,
bagControl=bagControl(fit=ctreeBag$fit,predict=ctreeBag$pred,aggregate=ctreeBag&aggregate))
library(party); data(ozone,package="ElemStatLearn")
install.packages"party"
install.packages("party")
library(party); data(ozone,package="ElemStatLearn")
# reorder rows based on ozone variable
ozone <- ozone[order(ozone$ozone),]
# extract predictors
predictors <- data.frame(ozone=ozone$ozone)
# extract outcome
temperature <- ozone$temperature
# run bagging algorithm
treebag <- bag(predictors, temperature, B = 10,
# custom bagging function
bagControl = bagControl(fit = ctreeBag$fit,
predict = ctreeBag$pred,
aggregate = ctreeBag$aggregate))
plot(ozone$ozone,temperature,col='lightgrey',pch=19)
# plot the first fit
points(ozone$ozone,predict(treebag$fits[[1]]$fit,predictors),pch=19,col="red")
# plot the aggregated predictions
points(ozone$ozone,predict(treebag,predictors),pch=19,col="blue")
```
colNames(iris)
colnames(iris)
head(ozone)
#reorder based on ozone variable
ozone<-ozone[order(ozone$ozone),]
#create empty matrix
ll<-matrix(NA,nrow=10,ncol=155)
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(dim(ozone)[1],replace=T)
ozone0<-ozone[ss,];ozone0<-ozone[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame(ozone=1:155))
}
ll
head(ozone)
#reorder based on ozone variable
ozone<-ozone[order(ozone$ozone),]
#create empty matrix
ll<-data.frame(NA,nrow=10,ncol=155)
for (i in 1:10){
#create sampel from data with replacement, create index first
ss<-sample(dim(ozone)[1],replace=T)
ozone0<-ozone[ss,];ozone0<-ozone[order(ozone$ozone),];
#fit loess function through data (similar to spline)
loess0<-loess(temperature~ozone,data=ozone0,span=0.2)
#predict from loess curve for the same value each time
ll[i,]<-predict(loess0,newdata=data.frame(ozone=1:155))
}
ll
8732
2
3
setwd("~/Documents/## Github Repo/Dospert-Risk-Domain-Analysis-/shiny")
runApp()
library(shiny)
runApp()
